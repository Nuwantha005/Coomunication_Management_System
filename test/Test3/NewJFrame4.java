/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Test3;

import java.awt.HeadlessException;
import java.io.*;
import java.net.URISyntaxException;
import java.security.CodeSource;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Nuwantha
 */
public class NewJFrame4 extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame4
     */
    public NewJFrame4() {
        initComponents();
    }

    public static String getData(String host, String port, String user, String password, String db, String table) throws Exception {

        //an "C:/xampp/mysql/bin/mysqldump" ---- location ito han mysqldump

        Process run = Runtime.getRuntime().exec(
                "cmd.exe /c mysqldump --host=" + host + " --port=" + port
                + " --user=" + user + " --password=" + password
                + " --compact --databases --add-drop-table --complete-insert --extended-insert "
                + "--skip-comments --skip-triggers " + db + " --tables " + table);

        InputStream in = run.getErrorStream();
        BufferedReader br = new BufferedReader(new InputStreamReader(in));
        StringBuilder temp = new StringBuilder();
        while (br.read() == -1) {
            temp.append(br.readLine());
        }
        br.close();
        in.close();

        return temp.toString();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 234, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(266, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ///////////////////////
        try {
            System.out.println(getData("localhost", "3306", "root", "123", "movies", "producer"));
            System.out.println("fgbtyh");
        } catch (Exception ex) {
            Logger.getLogger(NewJFrame4.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        /*
         * rhged
         * rthe
         * rhrhrh
         */
        
        
        /*
         * 
         * 
         * 
         * 
         */
        
        
        Backupdbtosql();
    }//GEN-LAST:event_jButton2ActionPerformed
    public static void Backupdbtosql() {
        try {

            /*
             * NOTE: Getting path to the Jar file being executed
             */
            /*
             * NOTE: YourImplementingClass-> replace with the class executing
             * the code
             */
            CodeSource codeSource = NewJFrame4.class.getProtectionDomain().getCodeSource();
            File jarFile = new File(codeSource.getLocation().toURI().getPath());
            String jarDir = jarFile.getParentFile().getPath();


            /*
             * NOTE: Creating Database Constraints
             */
            String dbName = "movies";
            String dbUser = "root";
            String dbPass = "123";

            /*
             * NOTE: Creating Path Constraints for folder saving
             */
            /*
             * NOTE: Here the backup folder is created for saving inside it
             */
            String folderPath = "E:\\backup";

            /*
             * NOTE: Creating Folder if it does not exist
             */
            File f1 = new File(folderPath);
            f1.mkdir();

            /*
             * NOTE: Creating Path Constraints for backup saving
             */
            /*
             * NOTE: Here the backup is saved in a folder called backup with the
             * name backup.sql
             */
            String savePath = folderPath + "\\backup.sql";

            /*
             * NOTE: Used to create a cmd command
             */
            String executeCmd = "cmd.exe /c mysqldump " + dbUser + " -p" + dbPass + " --database " + dbName + " -r " + savePath;

            /*
             * NOTE: Executing the command here
             */
            Process runtimeProcess = Runtime.getRuntime().exec(executeCmd);
            int processComplete = runtimeProcess.waitFor();

            /*
             * NOTE: processComplete=0 if correctly executed, will contain other
             * values if not
             */
            if (processComplete == 0) {
                System.out.println("Backup Complete");
            } else {
                System.out.println("Backup Failure");
            }

        } catch (URISyntaxException | IOException | InterruptedException ex) {
            JOptionPane.showMessageDialog(null, "Error at Backuprestore" + ex.getMessage());
        }
    }

    public static void Restoredbfromsql(String s) {
        try {
            /*
             * NOTE: String s is the mysql file name including the .sql in its
             * name
             */
            /*
             * NOTE: Getting path to the Jar file being executed
             */
            /*
             * NOTE: YourImplementingClass-> replace with the class executing
             * the code
             */
            CodeSource codeSource = NewJFrame4.class.getProtectionDomain().getCodeSource();
            File jarFile = new File(codeSource.getLocation().toURI().getPath());
            String jarDir = jarFile.getParentFile().getPath();

            /*
             * NOTE: Creating Database Constraints
             */
            String dbName = "YourDBName";
            String dbUser = "YourUserName";
            String dbPass = "YourUserPassword";

            /*
             * NOTE: Creating Path Constraints for restoring
             */
            String restorePath = jarDir + "\\backup" + "\\" + s;

            /*
             * NOTE: Used to create a cmd command
             */
            /*
             * NOTE: Do not create a single large string, this will cause buffer
             * locking, use string array
             */
            String[] executeCmd = new String[]{"mysql", dbName, "-u" + dbUser, "-p" + dbPass, "-e", " source " + restorePath};

            /*
             * NOTE: processComplete=0 if correctly executed, will contain other
             * values if not
             */
            Process runtimeProcess = Runtime.getRuntime().exec(executeCmd);
            int processComplete = runtimeProcess.waitFor();

            /*
             * NOTE: processComplete=0 if correctly executed, will contain other
             * values if not
             */
            if (processComplete == 0) {
                JOptionPane.showMessageDialog(null, "Successfully restored from SQL : " + s);
            } else {
                JOptionPane.showMessageDialog(null, "Error at restoring");
            }


        } catch (URISyntaxException | IOException | InterruptedException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, "Error at Restoredbfromsql" + ex.getMessage());
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new NewJFrame4().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}
