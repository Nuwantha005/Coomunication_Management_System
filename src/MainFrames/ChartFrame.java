/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package MainFrames;

import MyConn.MyConn;
import com.orsoncharts.*;
import com.orsoncharts.data.DefaultKeyedValues;
import com.orsoncharts.data.StandardPieDataset3D;
import com.orsoncharts.data.category.StandardCategoryDataset3D;
import com.orsoncharts.table.RectanglePainter;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.lang.reflect.Array;
import java.sql.ResultSet;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.apache.batik.ext.awt.image.GraphicsUtil;
import org.jdesktop.swingx.graphics.GraphicsUtilities;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;


/**
 *
 * @author Nuwantha
 */
public class ChartFrame extends javax.swing.JFrame {

    int xMouse, yMouse;
    ChartPanel panel2D;
    Chart3DPanel panel3D;
    JFreeChart chart2D;
    Chart3D chart3D;
    File file;

    /**
     * Creates new form LogInFrame
     */
    public ChartFrame() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Images/Icon.jpg")));
        chartfor.setSelectedIndex(0);
        this.setTitle("Charts");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Description = new javax.swing.JLabel();
        chartfor = new javax.swing.JComboBox();
        chartAbout = new javax.swing.JComboBox();
        chartType = new javax.swing.JComboBox();
        is3Dor2D = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        jLabel6 = new javax.swing.JLabel();
        dateChooserCombo2 = new datechooser.beans.DateChooserCombo();
        GenerateChart = new javax.swing.JButton();
        path = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        saveType = new javax.swing.JComboBox();
        Browse = new javax.swing.JButton();
        width = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        height = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        print = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255), 2));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 51, 255));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel3MousePressed(evt);
            }
        });
        jPanel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel3MouseDragged(evt);
            }
        });
        jPanel3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel3KeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("-");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText(" Charts");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("X ");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        Description.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Description.setForeground(new java.awt.Color(255, 255, 255));
        Description.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(Description, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Description, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        chartfor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chartfor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Value Chart", "GRN", "Items", "Services" }));
        chartfor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chartforActionPerformed(evt);
            }
        });

        chartAbout.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chartAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chartAboutActionPerformed(evt);
            }
        });

        chartType.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chartType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal Line Chart", "Bar Chart", "Pie Chart" }));
        chartType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chartTypeActionPerformed(evt);
            }
        });

        is3Dor2D.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        is3Dor2D.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2D - 1", "2D - 2", "3D" }));
        is3Dor2D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                is3Dor2DActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("From");

        dateChooserCombo1.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 18));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("To");

        dateChooserCombo2.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 18));

        GenerateChart.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        GenerateChart.setText("Genarate Chart");
        GenerateChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateChartActionPerformed(evt);
            }
        });

        path.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        path.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Save To:");

        saveType.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        saveType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "JPG", "PNG" }));
        saveType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveTypeActionPerformed(evt);
            }
        });

        Browse.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Browse.setText("Browse");
        Browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseActionPerformed(evt);
            }
        });

        width.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                widthActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Width");

        height.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heightActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Height");

        save.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        print.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(chartfor, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chartAbout, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chartType, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addComponent(dateChooserCombo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(dateChooserCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(is3Dor2D, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GenerateChart, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Browse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(saveType, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(width, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(height, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(save, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                            .addComponent(print, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chartfor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chartAbout, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chartType, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(is3Dor2D, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GenerateChart, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateChooserCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(516, 516, 516)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Browse, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(height, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(width, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveType, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1026)/2, (screenSize.height-733)/2, 1026, 733);
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel3KeyPressed
    }//GEN-LAST:event_jPanel3KeyPressed

    private void jPanel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jPanel3MousePressed

    private void jPanel3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_jPanel3MouseDragged

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        this.setState(this.ICONIFIED);
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        Description.setText(null);
    }//GEN-LAST:event_jPanel1MouseEntered

    private void chartforActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chartforActionPerformed
        chartAbout.removeAllItems();
        if (chartfor.getSelectedIndex() == 0) {
            chartAbout.addItem("Sales");
            chartAbout.addItem("Income");
            chartAbout.addItem("Expence");
        } else if (chartfor.getSelectedIndex() == 3) {
            try {
                String sql = "select serid,sername from services ";
                ResultSet rs = MyConn.search(sql);
                while (rs.next()) {
                    chartAbout.addItem(rs.getString(1) + " - " + rs.getString(2));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            try {
                String sql = "select iid,iname from stock ";
                ResultSet rs = MyConn.search(sql);
                while (rs.next()) {
                    chartAbout.addItem(rs.getString(1) + " - " + rs.getString(2));
                }
            } catch (Exception e) {
            }

        }
    }//GEN-LAST:event_chartforActionPerformed

    private void chartAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chartAboutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chartAboutActionPerformed

    private void chartTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chartTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chartTypeActionPerformed

    private void is3Dor2DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_is3Dor2DActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_is3Dor2DActionPerformed

    private void GenerateChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateChartActionPerformed
        //gtjrt
        DefaultCategoryDataset defCatDataset = new DefaultCategoryDataset();
        java.sql.Date first = new java.sql.Date(dateChooserCombo1.getSelectedDate().getTimeInMillis());
        java.sql.Date second = new java.sql.Date(dateChooserCombo2.getSelectedDate().getTimeInMillis());
        try {
            if (panel2D != null) {
                jPanel1.remove(panel2D);
            }
            if (panel3D != null) {
                jPanel1.remove(panel3D);
            }
            if (is3Dor2D.getSelectedIndex() == 0) {

                if (chartfor.getSelectedIndex() == 0) {
                    if (chartAbout.getSelectedIndex() == 0) {
                        if (chartType.getSelectedIndex() == 0) {
                            String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                String sql2 = "select sum(total) from sales where date = '" + rs.getString(1) + "' ";
                                ResultSet rs2 = MyConn.search(sql2);
                                while (rs2.next()) {
                                    defCatDataset.setValue(rs2.getDouble(1), "total", rs.getString(1));
                                }
                            }
                            chart2D = ChartFactory.createLineChart("Sales Incomes", "Date", "Value", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                        } else if (chartType.getSelectedIndex() == 1) {
                            String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                String sql2 = "select sum(total) from sales where date = '" + rs.getString(1) + "' ";
                                ResultSet rs2 = MyConn.search(sql2);
                                while (rs2.next()) {
                                    defCatDataset.setValue(rs2.getDouble(1), "Sales Income", rs.getString(1));
                                }
                            }
                            chart2D = ChartFactory.createBarChart("Sales Income", "Date", "Value", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                        } else if (chartType.getSelectedIndex() == 2) {
                            DefaultPieDataset pd = new DefaultPieDataset();
                            String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                String sql2 = "select sum(total) from sales where date = '" + rs.getString(1) + "' ";
                                ResultSet rs2 = MyConn.search(sql2);
                                while (rs2.next()) {
                                    pd.setValue(rs.getString(1), rs2.getDouble(1));
                                }

                            }
                            chart2D = ChartFactory.createPieChart("Sales Income", pd, true, true, true);
                        }
                    } else if (chartAbout.getSelectedIndex() == 1) {
                        if (chartType.getSelectedIndex() == 0) {
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 1 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                defCatDataset.setValue(rs.getDouble(2), "Income", rs.getString(1));
                            }
                            chart2D = ChartFactory.createLineChart("Incomes", "Date", "Value", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                        } else if (chartType.getSelectedIndex() == 1) {
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 1 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                defCatDataset.setValue(rs.getDouble(2), "Income", rs.getString(1));
                            }
                            chart2D = ChartFactory.createBarChart("Incomes", "Date", "Value", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                        } else if (chartType.getSelectedIndex() == 2) {
                            DefaultPieDataset pd = new DefaultPieDataset();
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 1 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                pd.setValue(rs.getString(1), rs.getDouble(2));
                            }
                            chart2D = ChartFactory.createPieChart("Income", pd, true, true, true);
                        }
                    } else if (chartAbout.getSelectedIndex() == 2) {
                        if (chartType.getSelectedIndex() == 0) {
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 0 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                defCatDataset.setValue(rs.getDouble(2), "Expences", rs.getString(1));
                            }
                            chart2D = ChartFactory.createLineChart("Expences", "Date", "Value", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                        } else if (chartType.getSelectedIndex() == 1) {
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 0 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                defCatDataset.setValue(rs.getDouble(2), "Expences", rs.getString(1));
                            }
                            chart2D = ChartFactory.createBarChart("Expences", "Date", "Value", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                        } else if (chartType.getSelectedIndex() == 2) {
                            DefaultPieDataset pd = new DefaultPieDataset();
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 0 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                pd.setValue(rs.getString(1), rs.getDouble(2));
                            }
                            chart2D = ChartFactory.createPieChart("Expences", pd, true, true, true);
                        }
                    }
                } else if (chartfor.getSelectedIndex() == 1) {
                    if (chartType.getSelectedIndex() == 0) {
                        String sql = "select distinct date from grn where stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' and date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select sum(count) from grn where date = '" + rs.getString(1) + "' and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                defCatDataset.setValue(rs2.getDouble(1), "Bought Count", rs.getString(1));
                            }
                        }
                        chart2D = ChartFactory.createLineChart("Line Chart for GRN", "Date", "Income", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                    } else if (chartType.getSelectedIndex() == 1) {
                        String sql = "select distinct date from grn where stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' and date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select sum(count) from grn where date = '" + rs.getString(1) + "'  and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                defCatDataset.setValue(rs2.getDouble(1), "Bought Count", rs.getString(1));
                            }
                        }
                        chart2D = ChartFactory.createBarChart("Bar Chart for GRN", "Date", "Value", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                    } else if (chartType.getSelectedIndex() == 2) {
                        DefaultPieDataset pd = new DefaultPieDataset();
                        String sql = "select distinct date from grn where stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' and date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select sum(count) from grn where date = '" + rs.getString(1) + "'  and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "'  ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                pd.setValue(rs.getString(1), rs2.getDouble(1));
                            }
                        }
                        chart2D = ChartFactory.createPieChart("Pie Chart for GRN", pd, true, true, true);
                    }
                } else if (chartfor.getSelectedIndex() == 2) {
                    if (chartType.getSelectedIndex() == 0) {
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_need_stock where sales_invoice = '" + rs2.getString(1) + "' and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    defCatDataset.setValue(rs3.getDouble(1), "Count", rs.getString(1));
                                }
                            }
                        }
                        chart2D = ChartFactory.createLineChart("Item Sales", "Date", "Count", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                    } else if (chartType.getSelectedIndex() == 1) {
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_need_stock where sales_invoice = '" + rs2.getString(1) + "' and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    defCatDataset.setValue(rs3.getDouble(1), "Count", rs.getString(1));
                                }
                            }
                        }
                        chart2D = ChartFactory.createBarChart("Item Sales", "Date", "Count", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                    } else if (chartType.getSelectedIndex() == 2) {
                        DefaultPieDataset pd = new DefaultPieDataset();
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_need_stock where sales_invoice = '" + rs2.getString(1) + "' and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    pd.setValue(rs.getString(1), rs3.getDouble(1));
                                }
                            }
                        }
                        chart2D = ChartFactory.createPieChart("Items Sales", pd, true, true, true);
                    }
                } else if (chartfor.getSelectedIndex() == 3) {
                    if (chartType.getSelectedIndex() == 0) {
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_has_services where sales_invoice = '" + rs2.getString(1) + "' and services_serid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    defCatDataset.setValue(rs3.getDouble(1), "Count", rs.getString(1));
                                }
                            }
                        }
                        chart2D = ChartFactory.createLineChart("Services Sales", "Date", "Count", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                    } else if (chartType.getSelectedIndex() == 1) {
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_has_services where sales_invoice = '" + rs2.getString(1) + "' and services_serid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    defCatDataset.setValue(rs3.getDouble(1), "Count", rs.getString(1));
                                }
                            }
                        }
                        chart2D = ChartFactory.createBarChart("Services Sales", "Date", "Count", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                    } else if (chartType.getSelectedIndex() == 2) {
                        DefaultPieDataset pd = new DefaultPieDataset();
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_has_services where sales_invoice = '" + rs2.getString(1) + "' and services_serid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    pd.setValue(rs.getString(1), rs3.getDouble(1));
                                }
                            }
                        }
                        chart2D = ChartFactory.createPieChart("Services Sales", pd, true, true, true);
                    }
                }
                panel2D = new ChartPanel(chart2D);
                jPanel1.add(panel2D);
                panel2D.setBounds(10, 130, 1005, 505);
            } else if (is3Dor2D.getSelectedIndex() == 1) {
                if (chartfor.getSelectedIndex() == 0) {
                    if (chartAbout.getSelectedIndex() == 0) {
                        if (chartType.getSelectedIndex() == 0) {
                            String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                String sql2 = "select sum(total) from sales where date = '" + rs.getString(1) + "' ";
                                ResultSet rs2 = MyConn.search(sql2);
                                while (rs2.next()) {
                                    defCatDataset.setValue(rs2.getDouble(1), "total", rs.getString(1));
                                }
                            }
                            chart2D = ChartFactory.createLineChart3D("Sales Income", "Date", "Value", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                        } else if (chartType.getSelectedIndex() == 1) {
                            String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                String sql2 = "select sum(total) from sales where date = '" + rs.getString(1) + "' ";
                                ResultSet rs2 = MyConn.search(sql2);
                                while (rs2.next()) {
                                    defCatDataset.setValue(rs2.getDouble(1), "Sales Income", rs.getString(1));
                                }
                            }
                            chart2D = ChartFactory.createBarChart3D("Sales Income", "Date", "Value", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                        } else if (chartType.getSelectedIndex() == 2) {
                            DefaultPieDataset pd = new DefaultPieDataset();
                            String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                String sql2 = "select sum(total) from sales where date = '" + rs.getString(1) + "' ";
                                ResultSet rs2 = MyConn.search(sql2);
                                while (rs2.next()) {
                                    pd.setValue(rs.getString(1), rs2.getDouble(1));
                                }

                            }
                            chart2D = ChartFactory.createPieChart3D("Sales Income", pd, true, true, true);
                        }
                    } else if (chartAbout.getSelectedIndex() == 1) {
                        if (chartType.getSelectedIndex() == 0) {
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 1 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                defCatDataset.setValue(rs.getDouble(2), "Income", rs.getString(1));
                            }
                            chart2D = ChartFactory.createLineChart3D("Incomes", "Date", "Value", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                        } else if (chartType.getSelectedIndex() == 1) {
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 1 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                defCatDataset.setValue(rs.getDouble(2), "Income", rs.getString(1));
                            }
                            chart2D = ChartFactory.createBarChart3D("Incomes", "Date", "Value", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                        } else if (chartType.getSelectedIndex() == 2) {
                            DefaultPieDataset pd = new DefaultPieDataset();
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 1 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                pd.setValue(rs.getString(1), rs.getDouble(2));
                            }
                            chart2D = ChartFactory.createPieChart3D("Income", pd, true, true, true);
                        }
                    } else if (chartAbout.getSelectedIndex() == 2) {
                        if (chartType.getSelectedIndex() == 0) {
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 0 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                defCatDataset.setValue(rs.getDouble(2), "Expences", rs.getString(1));
                            }
                            chart2D = ChartFactory.createLineChart3D("Expences", "Date", "Value", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                        } else if (chartType.getSelectedIndex() == 1) {
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 0 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                defCatDataset.setValue(rs.getDouble(2), "Expences", rs.getString(1));
                            }
                            chart2D = ChartFactory.createBarChart3D("Expences", "Date", "Value", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                        } else if (chartType.getSelectedIndex() == 2) {
                            DefaultPieDataset pd = new DefaultPieDataset();
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 0 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                pd.setValue(rs.getString(1), rs.getDouble(2));
                            }
                            chart2D = ChartFactory.createPieChart3D("Expences", pd, true, true, true);
                        }
                    }
                } else if (chartfor.getSelectedIndex() == 1) {
                    if (chartType.getSelectedIndex() == 0) {
                        String sql = "select distinct date from grn where stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' and date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select sum(count) from grn where date = '" + rs.getString(1) + "'  and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "'  ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                defCatDataset.setValue(rs2.getDouble(1), "Bought Count", rs.getString(1));
                            }
                        }
                        chart2D = ChartFactory.createLineChart3D("Line Chart for GRN", "Date", "Value", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                    } else if (chartType.getSelectedIndex() == 1) {
                        String sql = "select distinct date from grn where stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' and date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select sum(count) from grn where date = '" + rs.getString(1) + "'  and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "'  ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                defCatDataset.setValue(rs2.getDouble(1), "Bought Count", rs.getString(1));
                            }
                        }
                        chart2D = ChartFactory.createBarChart3D("Bar Chart for GRN", "Date", "Value", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                    } else if (chartType.getSelectedIndex() == 2) {
                        DefaultPieDataset pd = new DefaultPieDataset();
                        String sql = "select distinct date from grn where stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' and date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select sum(count) from grn where date = '" + rs.getString(1) + "'  and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "'  ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                pd.setValue(rs.getString(1), rs2.getDouble(1));
                            }
                        }
                        chart2D = ChartFactory.createPieChart3D("Pie Chart for GRN", pd, true, true, true);
                    }
                } else if (chartfor.getSelectedIndex() == 2) {
                    if (chartType.getSelectedIndex() == 0) {
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_need_stock where sales_invoice = '" + rs2.getString(1) + "' and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    defCatDataset.setValue(rs3.getDouble(1), "Count", rs.getString(1));
                                }
                            }
                        }
                        chart2D = ChartFactory.createLineChart3D("Item Sales", "Date", "Count", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                    } else if (chartType.getSelectedIndex() == 1) {
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_need_stock where sales_invoice = '" + rs2.getString(1) + "' and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    defCatDataset.setValue(rs3.getDouble(1), "Count", rs.getString(1));
                                }
                            }
                        }
                        chart2D = ChartFactory.createBarChart3D("Item Sales", "Date", "Count", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                    } else if (chartType.getSelectedIndex() == 2) {
                        DefaultPieDataset pd = new DefaultPieDataset();
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_need_stock where sales_invoice = '" + rs2.getString(1) + "' and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    pd.setValue(rs.getString(1), rs3.getDouble(1));
                                }
                            }
                        }
                        chart2D = ChartFactory.createPieChart3D("Items Sales", pd, true, true, true);
                    }
                } else if (chartfor.getSelectedIndex() == 3) {
                    if (chartType.getSelectedIndex() == 0) {
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_has_services where sales_invoice = '" + rs2.getString(1) + "' and services_serid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    defCatDataset.setValue(rs3.getDouble(1), "Count", rs.getString(1));
                                }
                            }
                        }
                        chart2D = ChartFactory.createLineChart3D("Services Sales", "Date", "Count", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                    } else if (chartType.getSelectedIndex() == 1) {
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_has_services where sales_invoice = '" + rs2.getString(1) + "' and services_serid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    defCatDataset.setValue(rs3.getDouble(1), "Count", rs.getString(1));
                                }
                            }
                        }
                        chart2D = ChartFactory.createBarChart3D("Services Sales", "Date", "Count", defCatDataset, PlotOrientation.VERTICAL, true, true, true);
                    } else if (chartType.getSelectedIndex() == 2) {
                        DefaultPieDataset pd = new DefaultPieDataset();
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_has_services where sales_invoice = '" + rs2.getString(1) + "' and services_serid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    pd.setValue(rs.getString(1), rs3.getDouble(1));
                                }
                            }
                        }
                        chart2D = ChartFactory.createPieChart3D("Services Sales", pd, true, true, true);
                    }
                }
                panel2D = new ChartPanel(chart2D);
                jPanel1.add(panel2D);
                panel2D.setBounds(10, 130, 1005, 505);
            } else if (is3Dor2D.getSelectedIndex() == 2) {
                StandardCategoryDataset3D dataset = new StandardCategoryDataset3D();
                if (chartfor.getSelectedIndex() == 0) {
                    if (chartAbout.getSelectedIndex() == 0) {
                        if (chartType.getSelectedIndex() == 0) {
                            DefaultKeyedValues total = new DefaultKeyedValues();
                            DefaultKeyedValues discount = new DefaultKeyedValues();
                            String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                String sql2 = "select sum(total),sum(discount) from sales where date = '" + rs.getString(1) + "' ";
                                ResultSet rs2 = MyConn.search(sql2);
                                while (rs2.next()) {
                                    total.put(rs.getString(1), rs2.getDouble(1));
                                    discount.put(rs.getString(1), rs2.getDouble(2));
                                }
                            }
                            dataset.addSeriesAsRow("Total", total);
                            dataset.addSeriesAsRow("Discount", discount);
                            chart3D = Chart3DFactory.createLineChart("Sales and Discount", null, dataset, "Type", "Date", "Value");

                        } else if (chartType.getSelectedIndex() == 1) {
                            DefaultKeyedValues total = new DefaultKeyedValues();
                            DefaultKeyedValues discount = new DefaultKeyedValues();
                            String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                String sql2 = "select sum(total),sum(discount) from sales where date = '" + rs.getString(1) + "' ";
                                ResultSet rs2 = MyConn.search(sql2);
                                while (rs2.next()) {
                                    total.put(rs.getString(1), rs2.getDouble(1));
                                    discount.put(rs.getString(1), rs2.getDouble(2));
                                }
                            }
                            dataset.addSeriesAsRow("Total", total);
                            dataset.addSeriesAsRow("Discount", discount);
                            chart3D = Chart3DFactory.createBarChart("Sales and Discount", null, dataset, "Type", "Date", "Value");
                        } else if (chartType.getSelectedIndex() == 2) {
                            StandardPieDataset3D pie = new StandardPieDataset3D();
                            String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                String sql2 = "select sum(total) from sales where date = '" + rs.getString(1) + "' ";
                                ResultSet rs2 = MyConn.search(sql2);
                                while (rs2.next()) {
                                    pie.add(rs.getString(1), rs2.getDouble(1));
                                }
                            }
                            chart3D = Chart3DFactory.createPieChart("Sales and Discount ", null, pie);
                        }
                    } else if (chartAbout.getSelectedIndex() == 1) {
                        if (chartType.getSelectedIndex() == 0) {
                            DefaultKeyedValues value = new DefaultKeyedValues();
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 1 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                value.put(rs.getString(1), rs.getDouble(2));
                            }
                            dataset.addSeriesAsRow("Income", value);
                            chart3D = Chart3DFactory.createLineChart("Incomes", null, dataset, "Type", "Date", "Value");
                        } else if (chartType.getSelectedIndex() == 1) {
                            DefaultKeyedValues value = new DefaultKeyedValues();
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 1 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                value.put(rs.getString(1), rs.getDouble(2));
                            }
                            dataset.addSeriesAsRow("Income", value);
                            chart3D = Chart3DFactory.createBarChart("Incomes", null, dataset, "Type", "Date", "Value");
                        } else if (chartType.getSelectedIndex() == 2) {
                            StandardPieDataset3D pie = new StandardPieDataset3D();
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 1 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                pie.add(rs.getString(1), rs.getDouble(2));
                            }
                            chart3D = Chart3DFactory.createPieChart(" Incomes ", null, pie);
                        }
                    } else if (chartAbout.getSelectedIndex() == 2) {
                        if (chartType.getSelectedIndex() == 0) {
                            DefaultKeyedValues value = new DefaultKeyedValues();
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 0 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                value.put(rs.getString(1), rs.getDouble(2));
                            }
                            dataset.addSeriesAsRow("Expence", value);
                            chart3D = Chart3DFactory.createLineChart("Expences", null, dataset, "Type", "Date", "Value");
                        } else if (chartType.getSelectedIndex() == 1) {
                            DefaultKeyedValues value = new DefaultKeyedValues();
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 0 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                value.put(rs.getString(1), rs.getDouble(2));
                            }
                            dataset.addSeriesAsRow("Expence", value);
                            chart3D = Chart3DFactory.createBarChart("Expences", null, dataset, "Type", "Date", "Value");
                        } else if (chartType.getSelectedIndex() == 2) {
                            StandardPieDataset3D pie = new StandardPieDataset3D();
                            String sql = "select  date,value from incomeexpence where incomeorexpence = 0 and date between '" + first + "' and '" + second + "' ";
                            ResultSet rs = MyConn.search(sql);
                            while (rs.next()) {
                                pie.add(rs.getString(1), rs.getDouble(2));
                            }
                            chart3D = Chart3DFactory.createPieChart("Expences", null, pie);
                        }
                    }
                } else if (chartfor.getSelectedIndex() == 1) {
                    if (chartType.getSelectedIndex() == 0) {
                        DefaultKeyedValues total = new DefaultKeyedValues();
                        String sql = "select distinct date from grn where stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' and date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select sum(count) from grn where date = '" + rs.getString(1) + "'  and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "'  ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                total.put(rs.getString(1), rs2.getDouble(1));
                            }
                        }
                        dataset.addSeriesAsRow("Brought Count", total);
                        chart3D = Chart3DFactory.createLineChart("Expences", null, dataset, "Type", "Date", "Value");
                    } else if (chartType.getSelectedIndex() == 1) {
                        DefaultKeyedValues total = new DefaultKeyedValues();
                        String sql = "select distinct date from grn where stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' and date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select sum(count) from grn where date = '" + rs.getString(1) + "'  and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "'  ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                total.put(rs.getString(1), rs2.getDouble(1));
                            }
                        }
                        dataset.addSeriesAsRow("Brought Count", total);
                        chart3D = Chart3DFactory.createBarChart("Expences", null, dataset, "Type", "Date", "Value");
                    } else if (chartType.getSelectedIndex() == 2) {
                        StandardPieDataset3D pie = new StandardPieDataset3D();
                        String sql = "select distinct date from grn where stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' and date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select sum(count) from grn where date = '" + rs.getString(1) + "'  and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "'  ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                pie.add(rs.getString(1), rs2.getDouble(1));
                            }
                        }
                        chart3D = Chart3DFactory.createPieChart("GRN For Item", "", pie);
                    }
                } else if (chartfor.getSelectedIndex() == 2) {
                    if (chartType.getSelectedIndex() == 0) {
                        DefaultKeyedValues total = new DefaultKeyedValues();
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_need_stock where sales_invoice = '" + rs2.getString(1) + "' and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    total.put(rs.getString(1), rs3.getDouble(1));
                                }
                            }
                        }
                        dataset.addSeriesAsRow("Count", total);
                        chart3D = Chart3DFactory.createLineChart("Line Chart for Item", "", dataset, "Type", "Date", "Value");
                    } else if (chartType.getSelectedIndex() == 1) {
                        DefaultKeyedValues total = new DefaultKeyedValues();
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_need_stock where sales_invoice = '" + rs2.getString(1) + "' and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    total.put(rs.getString(1), rs3.getDouble(1));
                                }
                            }
                        }
                        dataset.addSeriesAsRow("Count", total);
                        chart3D = Chart3DFactory.createBarChart("Bar Chart for Item", "", dataset, "Type", "Date", "Value");
                    } else if (chartType.getSelectedIndex() == 2) {
                        StandardPieDataset3D pie = new StandardPieDataset3D();
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_need_stock where sales_invoice = '" + rs2.getString(1) + "' and stock_iid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    pie.add(rs.getString(1), rs3.getDouble(1));
                                }
                            }
                        }
                        chart3D = Chart3DFactory.createPieChart("Pie Chart for Item", "", pie);
                    }
                } else if (chartfor.getSelectedIndex() == 3) {
                    if (chartType.getSelectedIndex() == 0) {
                        DefaultKeyedValues total = new DefaultKeyedValues();
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_has_services where sales_invoice = '" + rs2.getString(1) + "' and services_serid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    total.put(rs.getString(1), rs3.getDouble(1));
                                }
                            }
                        }
                        dataset.addSeriesAsRow("Count", total);
                        chart3D = Chart3DFactory.createLineChart("Line Chart for ", "", dataset, "Type", "Date", "Value");
                    } else if (chartType.getSelectedIndex() == 1) {
                        DefaultKeyedValues total = new DefaultKeyedValues();
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_has_services where sales_invoice = '" + rs2.getString(1) + "' and services_serid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    total.put(rs.getString(1), rs3.getDouble(1));
                                }
                            }
                        }
                        dataset.addSeriesAsRow("Count", total);
                        chart3D = Chart3DFactory.createBarChart("Bar Chart for ", "", dataset, "Type", "Date", "Value");
                    } else if (chartType.getSelectedIndex() == 2) {
                        StandardPieDataset3D pie = new StandardPieDataset3D();
                        String sql = "select distinct date from sales where date between '" + first + "' and '" + second + "' ";
                        ResultSet rs = MyConn.search(sql);
                        while (rs.next()) {
                            String sql2 = "select invoice from sales where date = '" + rs.getString(1) + "' ";
                            ResultSet rs2 = MyConn.search(sql2);
                            while (rs2.next()) {
                                String sql3 = "select sum(count) from sales_has_services where sales_invoice = '" + rs2.getString(1) + "' and services_serid = '" + chartAbout.getSelectedItem().toString().split(" - ")[0] + "' ";
                                ResultSet rs3 = MyConn.search(sql3);
                                while (rs3.next()) {
                                    pie.add(rs.getString(1), rs3.getDouble(1));
                                }
                            }
                        }
                        chart3D = Chart3DFactory.createPieChart("Pie Chart for Service", "", pie);
                    }
                }
                panel3D = new Chart3DPanel(chart3D);
                jPanel1.add(panel3D);
                panel3D.setBounds(10, 130, 1005, 505);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_GenerateChartActionPerformed

    private void saveTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTypeActionPerformed
        if (path.getText().contains(".")) {
            if (saveType.getSelectedIndex() == 0) {
                path.setText(path.getText().substring(0, path.getText().indexOf(".")) + ".jpg");
            } else {
                path.setText(path.getText().substring(0, path.getText().indexOf(".")) + ".png");
            }
        } else {
            if (saveType.getSelectedIndex() == 0) {
                path.setText(path.getText().replace(".", "") + ".jpg");
            } else {
                path.setText(path.getText().replace(".", "") + ".png");
            }
        }
    }//GEN-LAST:event_saveTypeActionPerformed

    private void BrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseActionPerformed
        JFileChooser fileChooser = new JFileChooser(System.getProperty("user.home") + "/Pictures");
        int r = fileChooser.showSaveDialog(this);
        if (r == JFileChooser.APPROVE_OPTION) {
            file = fileChooser.getSelectedFile();
            if (!file.getName().contains(".")) {
                file = new File(file.getAbsolutePath() + ".jpg");
            }
            path.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_BrowseActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        try {
            if (panel2D == null && panel3D == null) {
                JOptionPane.showMessageDialog(this, "Please Genarate a Chart First");
            } else {
                file = new File(path.getText());
                if (saveType.getSelectedIndex() == 0) {
                    if (jPanel1.getComponentAt(12, 132) == panel2D) {
                        ChartUtilities.saveChartAsJPEG(file, panel2D.getChart(), Integer.parseInt(width.getText()), Integer.parseInt(height.getText()));
                    } else if (jPanel1.getComponentAt(12, 132) == panel3D) {
                        Robot robot = new Robot();
                        panel3D.requestFocus();
                        BufferedImage chart = robot.createScreenCapture(new Rectangle(panel3D.getLocationOnScreen(), panel3D.getSize()));
                        ImageIO.write(chart, "jpg", file);
                    }
                } else {
                    if (panel2D.isVisible()) {
                        ChartUtilities.saveChartAsPNG(file, panel2D.getChart(), Integer.parseInt(width.getText()), Integer.parseInt(height.getText()));
                    } else if (panel3D.isVisible()) {
                        Robot robot = new Robot();
                        panel3D.requestFocus();
                        BufferedImage chart = robot.createScreenCapture(new Rectangle(panel3D.getLocationOnScreen(), panel3D.getSize()));
                        ImageIO.write(chart, "png", file);
                    }
                }
                JOptionPane.showMessageDialog(this, "Completed", "Completed", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error : " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_saveActionPerformed

    private void widthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_widthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_widthActionPerformed

    private void heightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_heightActionPerformed

    private void pathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pathActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
    }//GEN-LAST:event_jLabel1MouseClicked

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_printActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ChartFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Browse;
    private javax.swing.JLabel Description;
    private javax.swing.JButton GenerateChart;
    private javax.swing.JComboBox chartAbout;
    private javax.swing.JComboBox chartType;
    private javax.swing.JComboBox chartfor;
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private datechooser.beans.DateChooserCombo dateChooserCombo2;
    private javax.swing.JTextField height;
    private javax.swing.JComboBox is3Dor2D;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField path;
    private javax.swing.JButton print;
    private javax.swing.JButton save;
    private javax.swing.JComboBox saveType;
    private javax.swing.JTextField width;
    // End of variables declaration//GEN-END:variables
}
